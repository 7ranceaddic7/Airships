PART
{
	name = WBI_BisonISRU
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/Heisenberg/Parts/Gondola/BisonISRU
	}
	rescaleFactor = 1
	node_attach = 0, -0.819, 0, 0, -1, 0, 1
	node_stack_bottom = 0, -0.819, 0.423, 0, -1, 0, 1
	node_stack_top = 0, 0.8288187, 0.423, 0, 1, 0, 1

	TechRequired = advExploration
	entryCost = 19000
	cost = 16000
	category = Utility
	subcategory = 0
	title = Mk1 ISRU Module
	manufacturer = Wild Blue Industries
	description = This prototype In-Situ Resource Utilization (ISRU) module is designed to fit in the cargo gondola as well as the Buffalo' wide flatbeds. It can take raw materials from convert them into useful products, albeit not very efficiently. These modules operate best at their ideal operating temperatures, and features auto-shutdown in the event of excessive overheating. Radiators can be used to help manage excessive heat. Its capabilities improve with technological advancement.
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 1.45
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 20
	maxTemp = 900
	breakingForce = 50
	breakingTorque = 50
	bulkheadProfiles = size1, srf

	MODULE
	{
		name = WBIMultiConverter
		enableLogging = True

		//Determines if the module allows in-field reconfiguring
		fieldReconfigurable = True

		//Require a confirmation click before changing resources
		confirmResourceSwitch = True

		//Determines whether or not to show the context menu GUI
		showGUI = True

		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = LiquidFuel

		//name of the template nodes to use
		templateNodes = BISONISRU

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 1.0
	}

	MODULE:NEEDS[BARIS]
	{
		name = ModuleQualityControl
		quality = 20
		mtbf = 200

		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = BisonQuality1
				description__ = Quality: 75; MTBF: 300hrs
				techRequired__ = advMetalWorks
				mtbf = 300
				quality = 25
			}
			UPGRADE
			{
				name__ = BisonQuality2
				description__ = Quality: 100; MTBF: 450hrs
				techRequired__ = metaMaterials
				mtbf = 450
				quality = 30
			}
		}
	}

	DRAG_CUBE
	{
		cube = Default, 2.727,0.7617,2.546, 2.727,0.7693,1.209, 4.167,0.9087,1.613, 4.167,0.9553,1.016, 3.511,0.7554,0.9429, 3.511,0.7584,0.9429, 0.004759,-0.4063,0.0001725, 2.527,2.471,1.693
	}
}